// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OfferManager.Infrastructure.Data;

#nullable disable

namespace OfferManager.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OfferManager.Domain.Models.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("Offers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Samsung",
                            Model = "Galaxy S21",
                            RegisteredAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Apple",
                            Model = "iPhone 13",
                            RegisteredAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Xiaomi",
                            Model = "Mi 11",
                            RegisteredAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 3
                        },
                        new
                        {
                            Id = 4,
                            Brand = "OnePlus",
                            Model = "9 Pro",
                            RegisteredAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 4
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Google",
                            Model = "Pixel 6",
                            RegisteredAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 5
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Sony",
                            Model = "Xperia 1",
                            RegisteredAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Huawei",
                            Model = "P50",
                            RegisteredAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 8,
                            Brand = "Motorola",
                            Model = "Edge",
                            RegisteredAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 3
                        },
                        new
                        {
                            Id = 9,
                            Brand = "Nokia",
                            Model = "8.3",
                            RegisteredAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 4
                        },
                        new
                        {
                            Id = 10,
                            Brand = "Realme",
                            Model = "GT",
                            RegisteredAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 5
                        },
                        new
                        {
                            Id = 11,
                            Brand = "Asus",
                            Model = "ROG Phone 5",
                            RegisteredAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 12,
                            Brand = "ZTE",
                            Model = "Axon 30",
                            RegisteredAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 13,
                            Brand = "LG",
                            Model = "Wing",
                            RegisteredAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 3
                        },
                        new
                        {
                            Id = 14,
                            Brand = "Vivo",
                            Model = "X60",
                            RegisteredAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 4
                        },
                        new
                        {
                            Id = 15,
                            Brand = "Oppo",
                            Model = "Find X3",
                            RegisteredAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            SupplierId = 5
                        });
                });

            modelBuilder.Entity("OfferManager.Domain.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 13, 0, 0, 0, DateTimeKind.Local),
                            Name = "Supplier A"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 2, 1, 13, 0, 0, 0, DateTimeKind.Local),
                            Name = "Supplier B"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 3, 1, 13, 0, 0, 0, DateTimeKind.Local),
                            Name = "Supplier C"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 4, 1, 13, 0, 0, 0, DateTimeKind.Local),
                            Name = "Supplier D"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 5, 1, 13, 0, 0, 0, DateTimeKind.Local),
                            Name = "Supplier E"
                        });
                });

            modelBuilder.Entity("OfferManager.Domain.Models.Offer", b =>
                {
                    b.HasOne("OfferManager.Domain.Models.Supplier", "Supplier")
                        .WithMany("Offers")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("OfferManager.Domain.Models.Supplier", b =>
                {
                    b.Navigation("Offers");
                });
#pragma warning restore 612, 618
        }
    }
}
